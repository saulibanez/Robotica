La localización del robot en el campo de fútbol fue el último programa realizado utilizando el robot Kobuki, programando en C++, utilizando ROS como framework para el desarrollo de software y Gazebo como software de simulación.
En este caso, están puestas todas las carpetas necesarias para ejecutar al robot.

=================
BREVE EXPLICACION
=================

La parte de programación constaba de tres partes, una de PERCEPCIÓN, la cual se encargaba de filtrar los colores, una vez filtrados, se distinguen entre pelotas, balizas y porterías. Este filtrado ha sido más trabajoso de lo que parecía en un principio, la imagen se ve en 3D, y una vez filtrada, los colores claros como el amarillo no se veían desde ciertos ángulos. La metodología que se ha usado para programarlo fue la idea de una tabla hash, es decir, en cada celda de un array se guarda un color, y de esa celda, salen listas enlazadas, viendo en el filtrado si el siguiente pixel localizado esta al lado o no, se restablecen los valores x, y, z de esa lista. Una vez hecho ese proceso, cree dos funciones para separar las balizas y las pelotas, en estos, con un iterador vamos recorriendo las listas y vemos si los colores coinciden, cuando se haya localizado una baliza o pelota, mandamos tf con su posición x, y, z, y además con su quaternion, aunque este lo puse por defecto a (0.0, 0.0, 0.0, 1.0) ya que no lo vamos a usar.

Una vez enviado todo, borramos toda la lista y volvemos a analizar la imagen que recibe. La segunda parte era de LOCALIZACIÓN, en esta parte lo que había que realizar era un filtro de partículas para localizarse, con el método de Montecarlo, este programa recibe los tf de las balizas y porterías conseguidas por el estado de percepción. Este método posee 4 etapas: inicialización, actualización, estimación y predicción. Para realizar el seguimiento de un objeto sobre una secuencia de imágenes, el filtro de partículas “lanza” al azar un conjunto de puntos sobre la imagen (etapa de inicialización, se crea un conjunto de partículas con un estado aleatorio), realizando cálculos se le asignará un valor, o valores, a cada uno de esos puntos (etapa de actualización). A partir de estos valores, se creará un nuevo conjunto de puntos que reemplazará al anterior. Esta elección también será al azar, pero los valores que se han adjudicado a cada uno de los puntos provocarán que sea más probable de elegir aquellos puntos que hayan capturado al objeto sobre el que quiere realizar el seguimiento (etapa de estimación). Una vez que se crea el nuevo conjunto de puntos, se realiza una leve modificación al estado (posición) de cada uno de ellos, con el fin de estimar el estado del objeto en el instante siguiente (etapa de predicción). Al terminar la etapa de predicción, se obtiene un nuevo conjunto de puntos al que se le vuelve a aplicar la etapa de actualización, repitiéndose este bucle hasta que termine la secuencia o desaparezca el objeto, caso en el cual se volvería a la etapa de inicialización.

La última parte era el COMPORTAMIENTO, aquí es la parte donde el robot se mueve. El robot recibe los tf de la parte de percepción y se suscribe a lo que manda la parte de localización. Su comportamiento empieza buscando la pelota, cuando encuentra una de las 3, va hacia ella y emite un sonido, una vez echo esto, empieza a girar o avanzar hasta que se encuentra, una vez localizado, gira hasta el ángulo donde se encuentra el punto de basura y avanzará hasta él. Cuando haya llegado, emitirá otro sonido, y volverá a buscar las pelotas.
